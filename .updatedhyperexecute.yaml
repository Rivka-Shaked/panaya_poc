version: "0.1"
user: gchawhan10
key: e0LlLtwPOwFxS1RcCyuenLu8vmO6Xpl3vO0Ppx4lNqiAuQBPYU
testSuites: []
pre: ["echo \"Downloading Panaya Agent \U0001F525\"", reg add "HKEY_LOCAL_MACHINE\Software\Policies\Google\Chrome" /v JavaScriptEnabled /t REG_DWORD /d 1 /f, 'curl -O https://cdn.panaya.com/downloads/TestAutomation/Agent_Prod/Agent.msi', msiexec /i Agent.msi /quiet, echo "✅ Panaya Agent Installed", python setting.py, echo "✅ Setting Configurations", sleep 5, pip install pyautogui]
preDirectives:
    commands: ["echo \"Downloading Panaya Agent \U0001F525\"", reg add "HKEY_LOCAL_MACHINE\Software\Policies\Google\Chrome" /v JavaScriptEnabled /t REG_DWORD /d 1 /f, 'curl -O https://cdn.panaya.com/downloads/TestAutomation/Agent_Prod/Agent.msi', msiexec /i Agent.msi /quiet, echo "✅ Panaya Agent Installed", python setting.py, echo "✅ Setting Configurations", sleep 5, pip install pyautogui]
    maxRetries: 0
    shell: ""
    workingDirectory: ""
postDirectives:
    commands: []
    shell: ""
    workingDirectory: ""
env:
    TARGET_OS: Windows 10
runson: win
autosplit: true
concurrency: 2
testDiscovery:
    autosubset: true
    command: find . -type f -name 'test*.py' | sed 's|^\./||'
    mode: dynamic
    shell: bash
    type: raw
testRunnerCommand: Sleep 1000
globalTimeout: 90
tunnelOpts:
    testsPerTunnel: 10
jobID: 664473e0-7ede-4a89-b2d2-c242b3dfaf67
codeDirectory: panaya_sudhir_sir
framework:
    name: ""
    flags: []
    discoveryFlags: []
    discoveryMode: ""
    discoveryType: ""
    runnerFlags: []
    workingDirectory: ""
    isTestNGXMLSuite: false
    defaultReports: false
    args:
        appPath: ""
        testSuitePath: ""
        xcTestPlanPath: ""
        shards:
            mappings: []
        filters:
            attributes: []
        devices: []
        deviceSelectionStrategy: ""
        appId: ""
        testSuiteAppId: ""
        xcTestPlanId: ""
        skipXMLOnRun: false
        skipInstall: false
        disableReleaseDevice: false
        platformName: ""
        isRealMobile: null
        avoidAppLaunch: false
        queueTimeout: 0
        uninstallPreviousBuild: false
        language: ""
        locale: ""
        preservedDevice: false
        fixedIP: ""
        resignApp: true
        minorOsVersion: false
        playwrightRD: false
        mobileDC: null
        skipUninstallPreviousBuild: false
        isVirtualDevice: false
        mitmProxy: false
        networkHar: false
        artifacts: false
        otherApps: []
        customData: {}
        smartUI: null
    additional_args: null
    licenseKey: ""
    userdefinediscovery: false
    toscaArgs: null
    version: ""
    downloadURL: ""
    baseCommand: ""
cypress: false
betaFeature:
    setPartiallyCompletedAsCompleted: false
combineTasksInMatrixMode: false
captureScreenRecordingForScenarios: true
maxRetriesPreSteps: 0
triggerMode: false
sourcePayload:
    verifySSL: true
collectLocalGitData: true
backgroundDirectives:
    commands:
        - command: pip install psutil && python main.py
          name: background runner
    shell: bash
    workingDirectory: ""
dynamicAllocation: false
appium: null
platformConfig: null
differentialUpload:
    enabled: false
    ttlHours: null
    forcedDisabled: false
project:
    id: ""
    name: ""
    type: custom
meta: {}
alwaysRunPostSteps: false
errorCategorizedOnFailureOnly: false
testDiscoveryResultV3: []
storageType: ""
localHTTPProxy: ""
regionConfig:
    vm: []
    storage:
        region: ""
        enabled: false
        name: ""
        platform: azure
waitForArtefactsUpload: false
unzipPayload: false
projectpath: ""
accessibilityJob: false
globalPre:
    mode: ""
    commands: []
    maxRetries: 0
    shell: ""
    workingDirectory: ""
    completed: false
    runson: ""
    cache: false
    yamlPath: null
    type: ""
    location: ""
globalPost:
    mode: ""
    commands: []
    shell: ""
    workingDirectory: ""
    completed: false
    runson: ""
slackChannel: ""
whiteLabelProductTag: ""
